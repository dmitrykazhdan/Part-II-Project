Critical:

- Implement exception rules.

- Add restrictions on exceptions. Allow only a restricted input type.

- Refactor code to make the ontology dir and output dir input parameters, not hardcoded.

- Do disjointness of data ranges.

- Edge case of rule 52 (and potentially others) if class expressions are equal.

- Look at cases when intersection/union size = 1. Think about how to handle it.

- Add check if laconic axiom contains conclusion
in practice should not happen. If size of justification > 1, then laconic can only through away 
parts, so must still have the same number of justification axioms





Good-To-Have:

- False Negatives are easier to test than false positives.

- In "ProcessOntology", add a timeout for the "gen.getExplanations(entailment, 4);" step.

- In the "ProofTreeGenerator" class, in the "getLaconicJustifications" method, add a timeout step
when computing laconic justifications.

- Test ontology processing by providing a sample ontology and investigating what files will be derived from it.
Ensure to include edge cases of T <= A and A <= F.



